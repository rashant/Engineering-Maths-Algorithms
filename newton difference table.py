import pandas as pd
import math
x=[0,1,2,3,4]
x_values=x
y=[1.00,1.50,2.20,3.10,4.60]
y_values=y
y_not=[]
y_n=[]
a=[]
for i in range(len(x)):
    if i<len(x):
        a.append(x[i])
        a.append(' ')
a.pop()
b=[]
for i in range(len(x)):
    if i<len(x):
        b.append(y[i])
        b.append(' ')
b.pop()

df=pd.DataFrame({'X': a, 'Y': b})

fir_dif = []
j=1
z=len(y)
data=[]
while j<z:
    lisz=[]
    for i in range((len(y)-1)):
        fir_dif.append(round(y[i+1]-y[i],4))
    y=fir_dif
    y_not.append(y[0])
    y_n.append(y[len(y)-1])
    for _ in range(j):
        lisz.append(' ')
    for k in y:
        lisz.append(k)
    zx = []
    for o in range(len(lisz)):
        if isinstance(lisz[o], float) or isinstance(lisz[o],int):
            zx.append(lisz[o])
            zx.append(' ')
        else:
            zx.append(lisz[o])
    zx.pop()
    lisz = zx
    for _ in range(j):
        lisz.append(' ')
    df[f'del{j}']=lisz
    fir_dif=[]
    j+=1

x=[]
for i in range(1,len(y_not)+1):
    xy=[]
    for j in range(0,i):
        xy.append(f'(u-{j})')
    z='*'.join(xy)+f'/{math.factorial(i)}'
    x.append(z)
print('***************************************************************************************************************************************')
print('                                                    Difference Table                                                                   ')
print('***************************************************************************************************************************************')
print(df)
print('=======================================================================================================================================\n\n')
eq_list_forward=[]
for i in range(len(y_not)):
    term=f'({y_not[i]}*{x[i]})'
    eq_list_forward.append(term)
eq=' + '.join(eq_list_forward)
finaleq=str(y_values[0])+' + '+eq
print('\n\n\n\n*******************************************************************************************************************************************************************************************************************')
print("                                                  Newton's Forward Equation                                                                          ")
print('*******************************************************************************************************************************************************************************************************************')
print(finaleq)
print('*******************************************************************************************************************************************************************************************************************')
x_not_value=3.8
u=(x_not_value-x_values[0])/(x_values[1]-x_values[0])
u=round(u,4)
sol=eval(finaleq)
print('\n**********************************************************************************************************************************************************************************************************************************************************')
print(f'U= {u}')
finaleq=finaleq.replace('u',str(u))
print(finaleq)
print(f'At {x_not_value}= {round(sol,2)}')
print('**********************************************************************************************************************************************************************************************************************************************************')

x=[]
for i in range(1,len(y_n)+1):
    xy=[]
    for j in range(0,i):
        xy.append(f'(u+{j})')
    z='*'.join(xy)+f'/{math.factorial(i)}'
    x.append(z)

eq_list_backward=[]
for i in range(len(y_n)):
    term=f'({y_n[i]}*{x[i]})'
    eq_list_backward.append(term)
eq=' + '.join(eq_list_backward)
finaleq=str(y_values[-1])+' + '+eq


print('\n\n\n\n\n\n*******************************************************************************************************************************************************************************************************************')
print("                                                  Newton's Backward Equation                                                                          ")
print('*******************************************************************************************************************************************************************************************************************')
print(finaleq)
print('*******************************************************************************************************************************************************************************************************************')
x_not_value=3.8
u=(x_not_value-x_values[-1])/(x_values[1]-x_values[0])
u=round(u,4)
sol=eval(finaleq)
print('\n**********************************************************************************************************************************************************************************************************************************************************')
print(f'U= {u}')
finaleq=finaleq.replace('u',str(u))
print(finaleq)
print(f'At {x_not_value}= {round(sol,2)}')
print('**********************************************************************************************************************************************************************************************************************************************************')

